class RestrictedGeneric<T extends Number> {
    private T value;

    public RestrictedGeneric(T value) {
        this.value = value;
    }

    public T getValue() {
        return value;
    }

    public void setValue(T value) {
        this.value = value;
    }

    public void displayType() {
        System.out.println("Type of value: " + value.getClass().getSimpleName());
    }
}

public class Main {
    public static void main(String[] args) {
        // Create a RestrictedGeneric object with Integer type
        RestrictedGeneric<Integer> intObj = new RestrictedGeneric<>(10);
        intObj.displayType();
        
        // Try to create a RestrictedGeneric object with primitive int type (will not compile)
        // RestrictedGeneric<int> intPrimitiveObj = new RestrictedGeneric<>(10);
        
        // Try to create a RestrictedGeneric object with Double type (will compile)
        RestrictedGeneric<Double> doubleObj = new RestrictedGeneric<>(3.14);
        doubleObj.displayType();
    }
}
