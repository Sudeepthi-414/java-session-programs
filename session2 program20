class Person {
    private String name;
    private int age;

    public Person(String name, int age) {
        this.name = name;
        this.age = age;
    }

    // Override toString() method to provide a custom string representation of the object
    @Override
    public String toString() {
        return "Person{name='" + name + "', age=" + age + "}";
    }

    // Override equals() method to compare objects based on their attributes
    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null || getClass() != obj.getClass()) {
            return false;
        }
        Person person = (Person) obj;
        return age == person.age && name.equals(person.name);
    }
}

public class Main {
    public static void main(String[] args) {
        // Create two Person objects
        Person person1 = new Person("Alice", 30);
        Person person2 = new Person("Bob", 25);

        // Display the string representation of each person using toString()
        System.out.println("Person 1: " + person1.toString());
        System.out.println("Person 2: " + person2.toString());

        // Compare the two Person objects using equals()
        if (person1.equals(person2)) {
            System.out.println("Person 1 is equal to Person 2.");
        } else {
            System.out.println("Person 1 is not equal to Person 2.");
        }

        // Create a third Person object with the same attributes as person1
        Person person3 = new Person("Alice", 30);

        // Compare person1 with person3 using equals()
        if (person1.equals(person3)) {
            System.out.println("Person 1 is equal to Person 3.");
        } else {
            System.out.println("Person 1 is not equal to Person 3.");
        }
    }
}
